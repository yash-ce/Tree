/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        if(root != NULL) search(root, "", res);
        return res;
    }
    
    void search(TreeNode* root, string p, vector<string> &res){
        if(root->left == NULL && root->right == NULL) res.push_back(p+to_string(root->val));
        if(root->left != NULL) search(root->left, p + to_string(root->val) + "->", res);
        if(root->right != NULL) search(root->right, p + to_string(root->val) + "->", res);
    }
};
