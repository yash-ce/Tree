/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root == NULL){
            return false;
        }
        else if(isSomeTree(root, subRoot)){
            return true;
        }
        else{
            return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);
        }
        
    }
    
    bool isSomeTree(TreeNode* root, TreeNode* t){
        if(root == NULL || t == NULL){
            return root==NULL && t == NULL;
        }
        else if(root->val == t->val){
            return isSomeTree(root->left, t->left) && isSomeTree(root->right, t->right);
        }
        else{
            return false;
        }
    }
    
};
