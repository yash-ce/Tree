/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, vector<TreeNode*> &v){
        if(root!=NULL){
            inorder(root->left, v);
            v.push_back(root);
            inorder(root->right, v);
        }
    }
    TreeNode* construct(vector<TreeNode*> &v, int start, int end){
        if(start > end){
            return NULL;
        }
        int mid = (start+end)/2;
        TreeNode* temp = v[mid];
        temp->left = construct(v, start, mid-1);
        temp->right = construct(v, mid+1, end);
        return temp;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<TreeNode*> v;
        inorder(root, v);
        return construct(v, 0, v.size()-1);
    }
};
