/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> res1, res2;
        dfs(root1, res1);
        dfs(root2, res2);
        if(res1.size() != res2.size()){
            return false;
        }
        else{
            bool flag = true;
            for(int i=0;i<res1.size();i++){
                if(res1[i] != res2[i]){
                    flag = false;
                    break;
                }
            }
            if(flag){
                return true;
            }
            else{
                return false;
            }
        }
    }
    
    void dfs(TreeNode* root, vector<int> &s){
        if(root == NULL){
            return;
        }
        if(root->left == NULL && root->right == NULL) s.push_back(root->val);
        dfs(root->left, s);
        dfs(root->right, s);
    }
};
